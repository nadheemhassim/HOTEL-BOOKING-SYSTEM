version: '3.8'

services:
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:5000/api
      - NEXT_PUBLIC_SOCKET_URL=http://localhost:5000
      - NEXT_PUBLIC_APP_NAME=Hotel Booking System
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:3000"]
      interval: 10s
      timeout: 5s
      retries: 3

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    environment:
      - PORT=5000
      - NODE_ENV=development
      - MONGODB_URI=mongodb+srv://hotel-room-book:test123@hotel-room-book.lu0vp.mongodb.net/?retryWrites=true&w=majority&appName=hotel-room-book
      - JWT_SECRET=1aa17f765d793161f89dd47b88ad6bdf39852933a416aa8c4de35b41a4c919d62bf7e7f78d86e672a3f90dec2eb0d72b2719d53d1dc882f3aca7c673f02d619d
      - JWT_EXPIRES_IN=7d
      - CORS_ORIGIN=http://localhost:3000
    depends_on:
      mongo:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:5000/api/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  mongodb_data: 